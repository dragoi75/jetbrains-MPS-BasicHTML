package BasicHTML.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseConstraintsAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class ConstraintsAspectDescriptor extends BaseConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }

  @Override
  public ConstraintsDescriptor getConstraints(SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return new ATag_Constraints();
      case 1:
        return new BodyTag_Constraints();
      case 2:
        return new DivTag_Constraints();
      case 3:
        return new HeadTag_Constraints();
      case 4:
        return new PTag_Constraints();
      case 5:
        return new SpanTag_Constraints();
      default:
    }
    return new BaseConstraintsDescriptor(concept);
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365eb0cc99L), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365ea03a8aL), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365eaa4d89L), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365ea590beL), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365eb31cb7L), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365ebb11ebL)).seal();
}
