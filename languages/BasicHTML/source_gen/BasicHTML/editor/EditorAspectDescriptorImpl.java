package BasicHTML.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.TransformationMenu;
import jetbrains.mps.openapi.editor.descriptor.NamedMenuId;
import java.util.Arrays;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new ATag_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new BodyTag_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new CSSList_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new CSSProperty_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new DivTag_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new HTML_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new HeadTag_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new PTag_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new SpanTag_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new TagList_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new Text_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }


  @NotNull
  @Override
  public Collection<TransformationMenu> getDeclaredNamedTransformationMenus(NamedMenuId menuId) {
    SAbstractConcept cncpt = (SAbstractConcept) menuId.getConcept();
    switch (conceptIndex1.index(cncpt)) {
      case 0:
        if (true) {
          switch (menuId.getFqName()) {
            case "BasicHTML.editor.ExtraCSS":
              return Arrays.asList(new TransformationMenu[]{new ExtraCSS()});
            case "BasicHTML.editor.InsertStyleSpan":
              return Arrays.asList(new TransformationMenu[]{new InsertStyleSpan()});
            default:
          }
        }
        break;
      default:
    }

    return Collections.<TransformationMenu>emptyList();
  }

  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365eb0cc99L), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365ea03a8aL), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365ebb1c7eL), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365ebb18d5L), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365eaa4d89L), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x63ed42a07a665bedL), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365ea590beL), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365eb31cb7L), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365ebb11ebL), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x63ed42a07a666ff6L), MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365eb3e5a1L)).seal();
  private static final ConceptSwitchIndex conceptIndex1 = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x92442f3b2ef5404eL, 0x81cbcaf61a2b4890L, 0x7e8c85365ebb11ebL)).seal();
}
